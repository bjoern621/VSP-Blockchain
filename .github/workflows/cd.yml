name: CD

on:
    push:
        branches: ["main"]
    workflow_dispatch:

# Needed to push to GHCR
permissions:
    contents: read
    packages: write

concurrency:
    group: cd-${{ github.ref }}
    cancel-in-progress: true

env:
    REGISTRY: ghcr.io
    IMAGE_OWNER: ${{ github.repository_owner }}
    NAMESPACE: vsp-blockchain
    MINER_IMAGE: ghcr.io/${{ github.repository_owner }}/vsp-blockchain-miner
    REST_IMAGE: ghcr.io/${{ github.repository_owner }}/vsp-blockchain-rest-api

jobs:
    build-and-push:
        name: Build and push Docker images
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push miner image
              id: build_miner
              uses: docker/build-push-action@v6
              with:
                  context: ./p2p-blockchain
                  file: ./p2p-blockchain/Dockerfile
                  push: true
                  tags: |
                      ${{ env.MINER_IMAGE }}:${{ github.sha }}
                      ${{ env.MINER_IMAGE }}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build and push rest-api image
              id: build_rest
              uses: docker/build-push-action@v6
              with:
                  context: ./rest-schnittstelle
                  file: ./rest-schnittstelle/Dockerfile
                  push: true
                  tags: |
                      ${{ env.REST_IMAGE }}:${{ github.sha }}
                      ${{ env.REST_IMAGE }}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Set outputs
              id: meta
              run: |
                  echo "miner_tag=${MINER_IMAGE}:${GITHUB_SHA}" >> $GITHUB_OUTPUT
                  echo "rest_tag=${REST_IMAGE}:${GITHUB_SHA}" >> $GITHUB_OUTPUT

        outputs:
            miner_tag: ${{ steps.meta.outputs.miner_tag }}
            rest_tag: ${{ steps.meta.outputs.rest_tag }}

    deploy:
        name: Deploy to Kubernetes
        needs: build-and-push
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up kubectl
              uses: azure/setup-kubectl@v4

            - name: Configure kubeconfig
              env:
                  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
              run: |
                  mkdir -p ~/.kube
                  printf "%s" "$KUBE_CONFIG" > ~/.kube/config

            - name: Deploy to Kubernetes
              run: |
                  kubectl apply -f kubernetes-deployment-prod.yaml

            - name: Update images to newly published tag
              env:
                  NAMESPACE: ${{ env.NAMESPACE }}
                  MINER_TAG: ${{ needs.build-and-push.outputs.miner_tag }}
                  REST_TAG: ${{ needs.build-and-push.outputs.rest_tag }}
              run: |
                  kubectl -n "$NAMESPACE" set image statefulset/miner miner="$MINER_TAG"
                  kubectl -n "$NAMESPACE" set image deployment/rest-api rest-api="$REST_TAG"

            - name: Wait for rollout
              env:
                  NAMESPACE: ${{ env.NAMESPACE }}
              run: |
                  kubectl -n "$NAMESPACE" rollout status statefulset/miner --timeout=180s || true
                  kubectl -n "$NAMESPACE" rollout status deployment/rest-api --timeout=180s || true
